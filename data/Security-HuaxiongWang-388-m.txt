fix-cm
amsmath
MaxMatrixCols20
     


op-tical net-works semi-conduc-tor
fit

  highlight/.style=rectangle,sharp corners,fill=red!15,draw,
    fill opacity=0.3,thin,inner sep=-2pt




F
N
Z
v
m
S
u
k
s
0
1
a
b
c
O
A
M
C


P
lcm
ord
rank
op-tical net-works semi-conduc-tor

The Cycle Structure of LFSR with Arbitrary
Characteristic Polynomial over Finite Fields
Zuling Chang Martianus Frederic Ezerman 

San Ling Huaxiong Wang
Chang Ezerman Ling Wang
Z. Chang School of Mathematics and Statistics, Zhengzhou University, Zhengzhou 450001, China

zulingchang@zzu.edu.cn
M. F. Ezerman S. Ling H. Wang Division of Mathematical Sciences, School of Physical and Mathematical Sciences,

Nanyang Technological University, 21 Nanyang Link, Singapore 637371

fredezerman,lingsan,HXWang@ntu.edu.sg
A preliminary version of this work was presented at SETA 2016.

Received: date / Accepted: date

We determine the cycle structure of linear feedback shift register with arbitrary monic characteristic polynomial over any finite field. For each cycle, a method to find a state and a new way to represent the state are proposed.
cycle structure cyclotomic number de Bruijn sequence decimation 
LFSR periodic sequence

11B50 94A55 94A60

IntroductionLet , where  with , be the finite field of characteristic  and cardinality . A linear feedback shift register (LFSR) with characteristic polynomial  satisfying  generates some periodic sequences  with  . All polynomials in this work are monic with positive degrees.

Let  denote the set containing all sequences with  as their characteristic polynomial. The cycle structure of  for arbitrary  reflects the algebraic structure and properties of its LFSR and has many potential applications. Determining the cycle structure is a crucial step in the construction of -ary de Bruijn sequences using the cycle joining method discussed in, ,.

Binary de Bruijn sequences have numerous well-known applications in cryptography, most notably as an ingredient in stream ciphers. Powerful tools developed from de Bruijn graphs whose vertices are length  strings of  alphabets accelerated DNA sequencing technologies . Genome assembly triggered in earnest investigations into possible applications of -ary de Bruijn sequences and related structures, inviting us to go beyond the usual binary set-up.

Two areas where -ary de Bruijn sequences have recently been shown to play important roles are neuroscience and biochemistry. In the former, the sequences are crucial in designing
experiments to test the relationship between ordered stimuli and the neural
responses that they trigger . In the latter, -ary de Bruijn sequences help build
compact libraries of RNA probes, useful to measure protein-RNA interactions .
These implementations require a large number of efficiently generated sequences.
Our work lays a good foundation for further investigation in this direction.

Results on the distribution of the periods and the number of sequences having a particular period
can be found in . The exact cycle structure, i.e., the list of states belonging to the sequences that generate each cycle in , is known only for several limited cases. When  is a primitive polynomial, the cycle structure is treated in . For , it is given in .

Let  be a set of  pairwise distinct monic irreducible polynomials in
, , and . Let
. This paper settles the open problem of determining the cycle structure of . For each cycle, a state belonging to the cycle is identified. We then use this knowledge to build a procedure to generate all sequences in  by supplying a state belonging to each of these sequences.

PreliminariesA -ary sequence  has entries . For , if  for all , then  is -periodic or with period  and we write . The period of  is not unique, so we call the smallest one the least period of . For brevity and when it is clear from the context, by period we mean least period in the sequel.

Let , , and . Addition and scalar multiplication are given respectively by  and .

It is well-known (see, , ) that
 can be generated by a linear feedback shift register (LFSR).
The entries satisfy the linear recursive relation

where , , and .

A (left) shift operator  acts on  by
. Thus, 
for  with the convention that
. Using , we write () as



The equation defines a characteristic polynomial

of  over . The sequence  may have many such polynomials. We call
the monic characteristic polynomial with the least degree the minimal polynomial and
its degree the linear complexity of .
The (least) period of  is equal to the order of its minimal polynomial.

If the minimal polynomial of  is primitive with degree , then  is the corresponding -sequence (also known as maximal length sequence) with period . This period is the maximal period of all sequences generated by any LFSR with minimal polynomial of degree . We use  to denote an -sequence.

A sequence  is said to be a -decimation sequence of , denoted by , if  for all .
A -decimation  of an -sequence  is also an -sequence if and only if . Hence, the number of distinct -sequences of period , up to cyclic shifts, is  where  is the Euler totient function. There is a bijection between the set of all such sequences and the set of primitive polynomials of degree  in . More properties of sequences in relation to their characteristic and minimal polynomials can be found in  and.

For  with characteristic polynomial  defined in (),
the vector  is the -th -stage state of . In particular, we call  the initial state. Note that the states
of the sequence depends on the specified characteristic polynomial.

A state operator  turns the state  into , i.e., . If  is a state of  and  is the period of , then the  distinct states of  are
.

To  in (), one associates a matrix


Using  as the input state, the state vectors of the resulting sequence are  for .
We know from  that  divides the order of  in .
Furthermore, .

For an -periodic sequence , define the set
 to be a shift equivalent class or a cycle in . Sequences in a cycle are said to be shift equivalent. Thus,  can be partitioned into cycles.

If  consists of exactly  cycles  for some , then its cycle structure is presented as . To study the cycle structure, determining a state belonging to
each sequence  is crucial. Starting with the state, one easily generates the whole sequence and, hence, the corresponding cycle in .

Given our setup, from we can derive the following properties.

 can be decomposed into a direct sum of  with , ,



Every sequence  can be written as



The period of  is  where  is the period of .


The polynomial  in  is a product of distinct irreducible polynomials, ,  for all . The same inductive proof works in our setup here.

The Cycle Structure of  when  is IrreducibleThis section discusses two ways to determine a state belonging to a sequence with irreducible minimal polynomial

In the first subsection the state is found by using cyclotomic classes while the second subsection makes use of decimation sequences.

Using Cyclotomic ClassesThe relation between sequences and cyclotomic classes can be used to find a state for each sequence with minimal polynomial .
Let  be a root of  with order  and let .
There must exist a primitive polynomial



with a root  satisfying . While we need only one  to be associated with a given , in general the choice is not unique.

Let  be a non-primitive irreducible polynomial of degree  with a root  and order . There are  primitive polynomials that can be associated with . Such a polynomial
 has degree  with a root  that satisfies .


Each of the roots of , say , satisfies . It is then clear that a chosen  can be
an associated primitive polynomial of only one irreducible polynomial of degree  and order . Two distinct non-primitive irreducible
polynomials, both with degree  and order , have the same number of associated primitive polynomials.
There are  primitive polynomials with degree  and there are  non-primitive irreducible polynomials with
degree  and order . Taking their ratio completes the proof.
Following, the cyclotomic classes , for , are defined by

The classes partition  into disjoint union




Using  as a basis for  as an -vector space,
for , one can uniquely express  as
.
Hence,


Define the mapping  by
 and  with the subscripts reduced modulo . By the recursive relation in (),  is a one-to-one mapping. Let


The discussion in  treats the case of . It generalizes naturally to any . Following the same
line of arguments, we deduce that, under , the cyclotomic class  corresponds to the cycle .
In other words,  and the sequence of states of , namely , where

for , are shift equivalent. Hence, . Thus,


Since  and  are bases for  as an -vector space, there is an invertible matrix  such that .

Build  by using the representations of  in the basis  and the fact that . Conversely, with  as the basis, , from which we derive the representation of  for .

For , using the representation of  in the basis  and by (),
we derive , which is a state of sequence .

Via Decimation
An alternative method to find a state for each nonzero cycle in  involves decimating -sequences. The trace function from  to  is given by . Recall, , from  that  whose characteristic polynomial  is primitive of degree  with a root  can be described using



Without loss of generality, one can let , , .

From , construct the  distinct -decimation sequences, each of period :



Observe that the entries in the resulting sequences satisfy



Since , each cycle  is a cycle in .

Starting from an arbitrary  consecutive elements of , one can derive  distinct
-stage states by the above -decimating process. It is then straightforward to verify that each of the derived states corresponds to one nonzero cycle. Since the ordering of the cycles in  has no significant bearing in our investigation, we can label these states arbitrarily. 

Given an irreducible polynomial , finding an associated primitive polynomial  can become computationally expensive for large values of  and . Decimating -sequences is a useful tool to accomplish the task while keeping the time complexity low.

Let . Given , for  let  be a primitive polynomial of degree  and let  be its corresponding -sequence.
The set  of all shift inequivalent -sequences with period  is given by



One can also build  from an arbitrary -sequence  by simply collecting all 
the -decimations  with  satisfying  and, 
for ,  and  do not belong to the same conjugate coset.

We now perform a systematic check to determine which among the s can be used as the associated primitive polynomials of . Derive  with period  and check if it shares a common string of  consecutive elements with a sequence generated by an LFSR with characteristic polynomial . If yes, then  can be associated to . The states that we want can then be determined using the method already described above. Performing the routine for all s guarantees a match between  and some . The required steps can be performed without using costly operations over . As  or  grows, our saving becomes more prominent since operations on 
polynomials over large finite fields are prohibitively expensive.

To end this section, the following example follows both approaches.

Let . It is irreducible with a root  of order . Hence,  and .
Note that  is a primitive polynomial whose root  satisfies . We can then express








Using  and writing in the form of (),
, and .
This implies that  is a state of  and
 is a state of . Thus,  
and  .

We can also get the respective states of  and  via decimation. The
-sequence with characteristic polynomial  is



The first  consecutive elements of  can be taken to form .
Hence,  and  are the respective -stage
states of  and .

In , there are  primitive polynomials of degree : 

. There are also  non-primitive
irreducible polynomials of degree , each having  and :


. By Lemma , each  is associated
with exactly one  for . We now use decimation to find the
association and, subsequently, determine the respective states of the nonzero cycles in  for all .

The -sequences are
*
_1&=(1, 1, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 2, 0, 0, 1, 0, 1, 2, 1, 1, 2, 0),

_2&=(1, 1, 1, 2, 0, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 2, 1, 0, 0, 2, 2, 0, 2, 0, 1, 2),

_3&=(1, 1, 1, 2, 1, 0, 2, 0, 2, 2, 0, 0, 1, 2, 2, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 2) , and

_4&=( 1, 1, 1, 0, 2, 1, 1, 2, 1, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 1, 2, 0, 2, 0, 0 ).
Their respective -decimation sequences are
*
_1^(2)&=(1, 1, 0, 0, 1, 2, 0, 2, 0, 1, 1, 1, 2), 
_2^(2)=(1, 1, 0, 1, 0, 0, 1, 2, 1, 0, 2, 2, 1),

_3^(2)&=(1, 1, 1, 2, 2, 0, 1, 2, 1, 0, 0, 1, 0) , 
_4^(2)=( 1, 1, 2, 1, 1, 1, 0, 2, 0, 2, 1, 0, 0).
We feed the first three entries of  to each LFSR whose characteristic polynomial is  to establish the association and the results given in Table .

[h!]

States and Nonzero Cycles in 


The Cycle Structure of  with Our next task is to find one state of each cycle in  with
, and  as defined in Sect.  and . Since () already gives the cycle structure of , we consider the states of the cycles in . The following result follows directly
from .
For , sequences in  with minimal polynomial 
can be divided into



distinct cycles, each with period  where  is the least integer 
satisfying .

We adapt the notion of -morphism, first introduced by Lempel in , to generate cycles with minimal polynomial  from cycles with minimal polynomial . A state of a cycle with minimal polynomial  can then be derived from a state belonging to a cycle with minimal polynomial . We apply the procedure recursively to cover all cycles. The mapping  sends 


Note that  is onto. Given  and ,
one can uniquely determine . Hence, for any , there
are  distinct 's satisfying .

Let  be an -stage state
of a sequence with characteristic polynomial . Then 
 implies  for .

The mapping  is a surjective homomorphism whose kernel, denoted by , is the set
 of  distinct -stage states of the sequences in .

Since  for any ,  preserves shift relation. Whenever  are consecutive states of a sequence, we know that  are also consecutive states of some sequence. Hence, for a sequence  with period , sequence  has period  and entries


If , then . If  is the minimal polynomial of , for some , then  is the minimal polynomial of .


For a given sequence  in ,
sequence  in () can be written as



Since , we have .
Thus, .

The second assertion can be similarly argued using the fact that  is irreducible.

Let  be a sequence with minimal polynomial . Then the minimal polynomial of 
is
*

Let  be a state belonging to sequence  with minimal polynomial . By (), the  distinct vectors  satisfying  are the respective states of some sequences with minimal polynomial . Given one such , these states can be written as the sum of  and the corresponding states in , i.e., as  with .

Let  be a sequence with minimal polynomial  containing  as a state. Now, consider all  sequences:  plus each of the  distinct sequences in . We next decide whether these sequences correspond to distinct cycles with minimal polynomial . The consideration is based on whether  is a power of .


Suppose  is not a power of . Let  be a sequence with minimal polynomial . Let  and  be two distinct sequences in . Then  and  are shift inequivalent.

Lemma  says that the period of  is  where  is the least integer with . Assume that  and  are shift equivalent. Then there exists an integer  such that .
Hence, .
Thus,  must be a characteristic polynomial of , implying that  with . This forces , which is a contradiction.
With  not a power of , let a state  of a sequence  with minimal polynomial  be given. Then, by (), the  distinct vectors  satisfying  are
states of pairwise distinct cycles, all of which has  as their minimal polynomial.

Given respective states  and  from two distinct cycles, each with minimal polynomial ,their  pre-image states  and  belong to two distinct cycles with minimal polynomial . Thus, given all  states of distinct cycles with minimal polynomial , the exact  states of all distinct cycles having minimal polynomial  are known.

In fact, given , we can let  and construct a state  by using (). Taking the sum of  and each of the -stage states of sequences in  gives us what we are after.

Let  for some nonnegative integer . For a sequence  with minimal polynomial ,
there exists a sequence  in  such that the set  contains  shift equivalent sequences.

Lemma  says that the period of  is .

Observe that that .
Since  is irreducible,  divides  but  does not divide
. Hence,  is the minimal polynomial of 
and .

Let . Since  has period ,




Proceeding inductively, one obtains
.

When , given a state  of a sequence  with minimal polynomial ,
we combine Lemma  and () to determine the  distinct vectors  satisfying . For an arbitrary , let .
Then the  distinct states  correspond to one cycle with minimal polynomial .

For two arbitrary such states, say  and , it follows that
. Thus, given  and , we can construct the states of all the  distinct cycles with minimal polynomial . Since there are  possible choices for , we can provide the exact
 states of all the distinct cycles with minimal polynomial .


It may be possible to derive an exact formula for  given , the value , and a vector . The formula is likely to be quite complicated and we leave it as an open problem. Using the LFSR to compute  directly from an arbitrary  seems to be the simplest approach.

()Let . Given a state  of a sequence with minimal polynomial  and an element , the entries of the resulting
 are
 for . When , we denote the resulting state by . The state is  when . Since the only nonzero sequence with minimal polynomial  is the all one sequence , we know that .

If  is not a power of , then  and  are the respective states of two distinct sequences sharing the same minimal polynomial . If  is a power of , then  and  belong to the same sequence with minimal polynomial .
Let , and note that . From Example , the
respective states of the two nonzero cycles are  and .

Using  and letting , we get a -stage
state  from () and . 
The corresponding sequence  of period  with minimal polynomial 
 is

It is easy to check that .
As indicated by the underbraces in (), ,  and 
generate the same cycle .

The  distinct -stage states in  can be partitioned into  disjoint sets,
each of the form  for . The respective states of the cycles with minimal polynomial  are . After some computation we arrive at
*
_i:0i <9=(), (1,0,0,1,0,1), (0,0,1,0,1,1), (1,0,1,1,1,2),(1,1,1,2,2,0),

(1,1,2,2,0,1), (1,2,2,0,1,2), (0,1,2,1,0,0), (1,1,0,2,1,2).
Obtaining  means we are halfway done.

To derive the remaining half we use  and let 
. This yields a -stage
state  with . The corresponding
sequence  is



One eventually gets
*
_i:0i <9=(), (1,0,0,1,0,1), (0,0,1,0,1,1), (0,1,0,1,1,1),(1,0,1,1,1,2),

(0,1,1,1,2,2), (1,1,1,2,2,0), (0,1,2,1,0,0), (2,1,1,0,2,1)
from which we can explicitly compute elements in .

All of the  states we have determined above belong to their  respective distinct cycles 
in .
Applying the approach recursively, starting from the states of distinct cycles
in , we determine the states of distinct cycles in .
For brevity, we present them as -stage states. This step can be performed
by using well-known properties of the LFSRs or, better still, by the method that
we propose in the next section.

The Cycle Structure of We combine the results established in previous sections to study .
The first subsection considers the cycle structure of . The second one develops
a procedure to find a state of each cycle in .

The Cycle Structure
We start by setting up the notations. Recall that .
Let  be of degree  having  as a root.
Let  and .
Based on Lemma , we label the cycles in :

where  is the least integer satisfying .
The respective periods and states
of the cycles are  and
.

The cycle structure of  can be deduced from the three properties listed at the end of Section . We give the formal statement in the next theorem.

Let .
Then
(f(x))=[]_i=1^k _j=0^_i-1[^i_j] 
_1 i_1 < i_2 k _j_1=0^_i_1-1 
_j_2=0^_i_2-1 __2=0^(e^i_2_j_2,e^i_1_j_1)-1
[^i_1_j_1+L^_2^i_2_j_2]
 

_j_1=0^_1-1 _j_k=0^_k-1 
__2=0^(e^2_j_2,e^1_j_1)-1 
__k=0^j_1^1+L^_2_j_2^2++L^_k_j_k^k].
If some cycles being the same is allowed, we can express
 more succinctly as



Theorem  shows the types of nonzero cycles that we have in . Cycles  come from
. For an -subset  of  with  for , cycles  are from . If some of the
 are , then

may be the same for different parameter choices.

When , the statements hold.

Let  and . It is clear that  contains  and  as subsets. Hence,



All other sequences in  must be of the form

with , , , , and  reduced modulo . The period is .

When  or , sequences
 and
 are
shift inequivalent.
For a contradiction, assume that for some , and ,




The last equality holds since



and  and  are distinct irreducible polynomials. This forces 
and , a contradiction.

The  distinct sequences having the form of () are divided into
 distinct cycles. Let 

and .
We show that 



are shift equivalent for  and .

Since , there exist  such that
, implying



The respective periods of  and  are  and .
Hence,





Thus, a  pair corresponds to the cycle
 with .

Going through all possible  pairs gives us all the possible cycles, confirming
() for the case of . The case of  follows by induction.
A State Belonging to Each Cycle
We now denote a cycle in  by  with
.
If  for some , then  is the all zero sequence .

Let  and .
By Sections  and , to find a state of ,
it suffices to find an -stage state 
of  for all . The desired state is


The representation in () has several limitations.
Given such a global expression, we can only use the properties of the
whole cycle  without being able to utilize the properties of
every component sequence . When the period of
 is fairly large, determining whether a state is in this
cycle may be hard to do, so we propose an alternative.

To each , one associates an  matrix  similar to the one constructed in (), i.e., treating  as a characteristic polynomial.
Construct the  matrix  in the following manner. The first  columns form the identity matrix . The matrix  occupies columns  to . Next, add columns recursively by appending the last column of , starting with  until all  columns of  are completed.

Given an -stage state  of some sequence in , it is evident
that  is the corresponding -stage state of that same sequence.
The  matrix











Let  denote the -th row of . We show that the rows  of  are linearly independent for all  with  and .

Notice that  is the first  entries of the sequence from LFSR with characteristic polynomial
 and initial -stage state , where the unique  is
in the -th position. For a fixed , it is clear that the rows of  are linearly independent.

For a contradiction, suppose that there exists a linear combination of the  rows of 



with not all . Without loss of generality, with not all , write

The left hand side of () is the first  entries of a sequence in  with a nonzero initial state of length  while the right hand side is the first  entries of a sequence in  with a nonzero initial state of length .

Since  and  are , if the first  entries of these two sequences are equal, then they must be the same sequence. Hence, there exists a sequence that simultaneously belongs to both  and . Since  are pairwise distinct, this sequence must be , a contradiction.
Suppose that we already have . Let  and 
with  be the respective -stage and -stage states of the
sequences in  and . Then  provides a
one-to-one correspondence between  and  via
. Since



we know  and  commute. Hence, any sequence
 with an initial state  is the sum of sequences  from  with corresponding initial states  for
. When convenient, we use  to represent .

Assume that we have obtained the set ,
where  is a state of cycle  and  the state of . This set contains
all of the states corresponding to the  distinct cycles in
. Then

can be taken as an initial state of a cycle . Notice that



with  if the corresponding component state is  and  otherwise.

Let  be a nonnegative integer for . By the state obtained
in () and by the properties of  and , the state



belongs to cycle




This approach enables us to find a state belonging to any cycle in .

Consider the characteristic polynomial
*
f(x)&=(x^2+1)^2_=g_1^2(x) (x^3+2x+2)^2_=g_2^2(x) (x^3+x^2+2)^2_=g_3^2(x)_3[x]

    &=(x^4+2x^2+1) (x^6 + x^4 + x^3 + x^2 + 2x+ 1) (x^6 + 2x^5 + x^4 + x^3 + x^2 + 1)

    &=x^16 + 2 x^15 + x^14 + 2 x^13 + x^12 + x^11 + x^9 + x^8 + x^7 + x^5 + x^4 + 
    2x^3 + x^2 + 2x + 1.
The parameters are , , and  for all .
Our  and  here are exactly the  and  in Example so we can use its relevant results. We choose  as the associated primitive polynomial of .The two nonzero cycles in  are  and .

With each respective  in the box, the matrix  is given by
&=

_1

_2

_3
  with  
_1 =
    1 & left0 & 0 & 0 & 2 & 0 & 2 & 0 & 0 & 0 & 1 & 0 & 1 & 0 & 0 & 0 

    0 & 1 & 0 & 0 & 0 & 2 & 0 & 2 & 0 & 0 & 0 & 1 & 0 & 1 & 0 & 0 

    0 & 0 & 1 & 0 & 1 & 0 & 0 & 0 & 2 & 0 & 2 & 0 & 0 & 0 & 1 & 0 

    0 & 0 & 0 & 1 & right0 & 1 & 0 & 0 & 0 & 2 & 0 & 2 & 0 & 0 & 0 & 1
[first]
 , 

_2 &=
    1 & left0 & 0 & 0 & 0 & 0 & 2 & 0 & 1 & 1 & 0 & 0 & 2 & 0 & 1 & 0 

    0 & 1 & 0 & 0 & 0 & 0 & 1 & 2 & 2 & 0 & 1 & 0 & 1 & 2 & 2 & 1 

    0 & 0 & 1 & 0 & 0 & 0 & 2 & 1 & 0 & 0 & 0 & 1 & 2 & 1 & 0 & 2 

    0 & 0 & 0 & 1 & 0 & 0 & 2 & 2 & 2 & 1 & 0 & 0 & 0 & 2 & 2 & 0 

    0 & 0 & 0 & 0 & 1 & 0 & 2 & 2 & 0 & 0 & 1 & 0 & 2 & 0 & 0 & 2 

    0 & 0 & 0 & 0 & 0 & 1 & right0 & 2 & 2 & 0 & 0 & 1 & 0 & 2 & 0 & 0
[second]
     , 
_3 =
    1 & left0 & 0 & 0 & 0 & 0 & 2 & 2 & 0 & 2 & 1 & 0 & 1 & 2 & 0 & 1 

    0 & 1 & 0 & 0 & 0 & 0 & 0 & 2 & 2 & 0 & 2 & 1 & 0 & 1 & 2 & 0 

    0 & 0 & 1 & 0 & 0 & 0 & 2 & 2 & 2 & 1 & 1 & 2 & 2 & 2 & 1 & 0 

    0 & 0 & 0 & 1 & 0 & 0 & 2 & 1 & 2 & 1 & 2 & 1 & 0 & 1 & 2 & 2 

    0 & 0 & 0 & 0 & 1 & 0 & 2 & 1 & 1 & 1 & 2 & 2 & 2 & 2 & 1 & 0 

    0 & 0 & 0 & 0 & 0 & 1 & right1 & 0 & 1 & 2 & 0 & 2 & 1 & 0 & 2 & 0
[third]
.


[h!]

States and Nonzero Cycles in 



There are  nonzero cycles in :  cycles of period  in  
and  cycles, each with period , in . 
Performing the required computations, the first  cycles with period  can be derived using , 
, and , yielding 
. The -stage states that we want are . 
To get the other , we use , , and , yielding 

. Explicitly determining elements in 
 completes our task for .

Examples  and  lead us to the nonzero cycles in . 
There are  cycles of period  in  and  cycles, each with period , in 
.

To determine all nonzero cycles in  we perform a similar analysis. Table  already listed the  cycles of period  in . The remaining  cycles, each with period , can be easily determined. The first  comes from , , and . The initial states are  with 
*
_i (),(1,1,0,1,0,0),(1,0,1,0,0,1),(0,1,0,0,1,2),(1,0,0,1,2,1),

(0,0,1,2,1,0),(1,2,1,0,2,2),(0,2,2,1,1,1),(2,0,1,1,2,2).
The remaining  comes from , , and 
. The initial states are  with 
*
_i (),(1,1,0,1,0,0),(0,1,0,0,1,2),(1,0,0,1,2,1),(2,1,0,2,2,1),

(1,0,2,2,1,1),(2,2,1,1,1,0),(2,1,1,1,0,1),(0,1,1,2,2,2).

The complete list of nonzero cycles and their corresponding states is in Table .

Consulting (), we know that
*
= (_3^1,_9^2,_8^3) &= (1,2,0,1,0,1,2,2,0,1,1,2,1,1,2,2)

   &=(2,2,0,1,1,2,2,1,2,2,2,2,0,2,1,0)
is a state of . 
The period of  is . One can quickly verify that using  
as the input state to the LFSR with characteristic polynomial  indeed yields  
since the first  entries of the two sequences match. 
We now highlight the advantage of our new representation of the states of the cycles in 
. To construct de Bruijn sequences by the cycle joining 
method one must find the conjugate pairs between any two cycles  and 
 in . We transform this problem into one that decides on whether two 
states belong to the same cycle. The latter can be solved by applying the state shift operator 
 repeatedly until one state is shown to be the other's cyclic shift or not.

The naive approach is to do exhaustive searching. If the period of the cycles are large, 
this is time consuming. Using the new representation, 
Algorithm  simplifies the work.

[h!]
Determining if two states belong to the same cycle
[1]
    and two states .
 Whether  are in the same cycle.


Main , , 



 from  to  Finding the period of the cycle containing state 
  , 
  
    
  

 from  to  Find whether 
  , 
  
    , 
  
   and 
    , 
    
    Output NO and break
  

 from 2 to  by Generalized CRT
   from  to 
    
      Output NO and break
      
Output: YES


Algorithm  is correct.


If the input states  and  in  are in the same cycle, then 
there exists an integer  such that . Multiplying by , 
we have  and  with 
 and  in . If  and  are in the same cycle,
then  and  must be in the same cycle in  for all .

The first part of Algorithm  determines the period  of the cycle containing the state . The second part tests whether  and  are in the same "component cycle" in 
. If the test fail for at least one  then  and  belong to 
distinct cycles. Otherwise, we obtain integers s that satisfy  for each . The last part verifies if there exists an integer  that makes . If such an  exists, then , ,



Hence,  exists if and only if there exists a solution to the system of congruences:

We know from Generalized Chinese Remainder Theorem (CRT)  that 
() has a solution if and only if the following equations hold simultaneously:




Our new representation allows for a faster check on whether a state  is in some  by 
inputting  and any state  belonging to  as  and  in Algorithm . Recall that the number of states in  is the period of . Instead of comparing  with all possible states in , the representation transforms the problem into performing the verification in  "component cycles". Algorithm  requires at most 
 steps while an exhaustive search takes  steps to complete. 


The input consists of  in (), , and 
. Hence, , , and 
 while , , and . 
The sequence generated by the LFSR with characteristic polynomial  on input  never 
contains  as a state. Hence,  and  are never in a common cycle.

Keep the same  and  but with . Hence, , , and . The sequence generated by the LFSR with characteristic polynomial  on input  is 
, making . Similarly, one obtains  and 
. Thus,  and . Since   and , it is immediate to confirm that  divides  and  divides , ensuring  and  belong to the same cycle.

ConclusionsTheorem  presents the cycle structure of LFSRs with arbitrary characteristic polynomial . This had not been previously done in the literature. We put forward a method to find a state of each
cycle in  by devising a new representation of the states to expedite the verification process. Finding conjugate pairs shared by two arbitrary cycles, which is crucial in the cycle joining method, can then be done more efficiently.


The work of Z. Chang is supported by the Joint Fund of the National Natural Science Foundation of China under Grant U1304604. Research Grants TL-9014101684-01 and MOE2013-T2-1-041 support the research carried out by M. F. Ezerman, S. Ling, and H. Wang.

plain



9
[1]#1
url@samestyle
[2]#2
4
plus
3minus
  4
[2]
l@#1** WARNING: IEEEtran.bst: No hyphenation pattern has been
** loaded for the language '#1'. Using the pattern for
** the default language instead.
l@#1#2

G. K. Aguirre, M. G. Mattar, and L. Magis-Weinberg, "De Bruijn cycles for neural decoding," NeuroImage,
  vol. 56, no. 3, pp. 1293-1300, 2011.

B. Berger and Y. Orenstein, "Efficient design of compact unstructured RNA libraries covering all -mers," in Proc.
WABI 2015, pp. 308-325, Atlanta, USA, Sept. 10-12, 2015,  Springer Berlin Heidelberg.

P. Compeau, P. Pevzner, and G. Tesler, "How to apply de Bruijn graphs to
  genome assembly," Nature Biotechnology, vol. 29, no. 11, pp.
  987-991, 2011.

C. Ding, D. Pei, and A. Salomaa, 
Chinese Remainder Theorem: Applications in Computing, Coding, Cryptography. 
River Edge, NJ, USA: World Scientific Publishing Co., Inc., 1996.
  
H. Fredricksen, "A survey of full length nonlinear shift register cycle algorithms," 
SIAM Review, vol. 24, no. 2, pp. 195-221, 1982.

S. W. Golomb, Shift Register Sequences. Laguna Hills: Aegean Park Press, 1981.

S. W. Golomb and G. Gong, Signal Design for Good Correlation: for
  Wireless Communication, Cryptography, and Radar. New York: Cambridge Univ. Press, 2004.

E. R. Hauge and T. Helleseth, "De Bruijn sequences, irreducible codes and
  cyclotomy," Discrete Math., vol. 159, no. 1-3, pp. 143-154, 1996.

A. Lempel, "On a homomorphism of the de Bruijn graph and its applications to
  the design of feedback shift registers," IEEE Trans. on Computers,
  vol. C-19, no. 12, pp. 1204-1209, Dec. 1970.

R. Lidl and H. Niederreiter, Finite Fields, ser. Encyclopaedia of
  Mathematics and Its Applications vol. 20.
  New York: Cambridge Univ. Press, 1997.

T. Storer, Cyclotomy and Difference Sets, ser. Lectures in Advanced
  Mathematics. Chicago: Markham Pub. Co., 1967.

>
> P<x>:=PolynomialRing(GF(3));
> P;
Univariate Polynomial Ring in x over GF(3)
> S:=LFSRSequence(x^6+x^4+x^3+x^2+2*x+1,[GF(3)0,0,0,1,0,0],39);S;

First S
[ 0, 0, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 0, 1, 2, 2, 0, 0, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 0, 1, 2, 1, 0, 0, 0, 1, 2 ]

Second S
[ 0, 0, 0, 1, 1, 2, 0, 2, 2, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 2, 0, 0, 1, 1, 2, 1, 0, 2, 1, 0, 1, 0, 1, 1, 1, 2, 1, 0, 1 ]





All monic irreducible polynomials of degree 3 over F4

x^3 + x^2 + x + w^2, prim
x^3 + w*x^2 + w^2*x + w, prim
x^3 + w^2*x^2 + w*x + w, prim
x^3 + x^2 + w*x + w^2, prim
x^3 + w*x^2 + x + w^2, prim
x^3 + x^2 + 1, NonPrim ; this is our choice, the order of the root beta is e=7 (verify). Find primitive polynomial such that its root alpha has property beta=alpha^9.
x^3 + x^2 + x + w, prim
x^3 + w^2, NonPrim
x^3 + x + 1, NonPrim; the order of the root beta is e=7 (verify). Find primitive polynomial such that its root alpha has property beta=alpha^9.
x^3 + w*x^2 + 1, NonPrim
x^3 + w*x^2 + w^2*x + w^2, prim
x^3 + w*x + 1, NonPrim
x^3 + x^2 + w^2*x + w, prim
x^3 + w^2*x^2 + w*x + w^2, prim
x^3 + w, NonPrim
x^3 + w*x^2 + w*x + w, prim
x^3 + w^2*x^2 + 1, NonPrim
x^3 + w^2*x^2 + x + w, prim
x^3 + w^2*x + 1, NonPrim
x^3 + w^2*x^2 + w^2*x + w^2, prim


F<w>:=FiniteField(4);
P<x>:=PolynomialRing(GF(4));
P;
for k in [2..5] do;
G:=AllIrreduciblePolynomials(F,k);
G:=SetToIndexedSet(G);
Prim:=  G[i]: i in [1..#G]  IsPrimitive(G[i]) ;
Prim;
end for;
